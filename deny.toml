# cargo-deny configuration (minimal, compatible with current cargo-deny schema)
# Reference: https://embarkstudios.github.io/cargo-deny/

[advisories]
# Minimal advisories configuration - rely on defaults and keep an explicit
# ignore list for any RUSTSEC IDs you intentionally accept. See:
# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html
ignore = [
  # "RUSTSEC-0000-0000",
]

[bans]
# Control multiple versions / wildcard bans
multiple-versions = "warn"
wildcards = "deny"
# Deny list (empty for now)
deny = []

[sources]
unknown-registry = "deny"
unknown-git = "warn"
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# Licenses: default deny, explicit allow-list
# Project policy: only allow a small set of permissive licenses; everything
# else (including GPL-family licenses) is denied by default. Use `exceptions`
# to temporarily allow specific crate versions with a rationale.
[licenses]
# Explicitly allow these licenses (SPDX identifiers)
# Allowed licenses (SPDX identifiers)
allow = [
  "MIT",
  "Apache-2.0",
  "Apache-2.0 WITH LLVM-exception",
  "BSD-2-Clause",
  "BSD-3-Clause",
  "ISC",
  "Zlib",
  "Unicode-DFS-2016",
  "CC0-1.0",
]
# Note: copyleft policy and auto-allow keys are removed in newer cargo-deny.
# We will enforce GPL-family exclusions via explicit bans if any GPL-licensed
# crates are detected.
# Confidence threshold for automatic license detection
confidence-threshold = 0.8
# Use exceptions to document temporary allowances
exceptions = [
  # { allow = ["GPL-3.0"], crate = "some-crate", version = "=1.2.3", rationale = "Temporary exception - awaiting upstream" }
]

# Optional: restrict allowed orgs for git sources (uncomment and set if desired)
#[sources.allow-org]
# github = ["jungamer-64"]
