name: CI â€” Docker build with BuildKit cache

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/rustcms

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show repo root (debug)
        run: |
          echo "Repo root files:"; ls -la --color=never || true
          echo "Top-level Cargo files:"; ls -la Cargo.toml Cargo.lock || true

      - name: Cache Cargo registry and git index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.repository_owner != ''
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image with BuildKit cache
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            FEATURES=dev-tools,auth,database
            NO_DEFAULT_FEATURES=false
            BINARY=admin_server

      - name: Save build info
        run: |
          echo "image=${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
